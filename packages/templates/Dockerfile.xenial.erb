# -*- mode: dockerfile -*-
# vim: set ft=dockerfile :

FROM ubuntu:xenial
MAINTAINER Uchio Kondo <udzura@udzura.jp>

ENV DEBIAN_FRONTEND noninteractive

RUN apt-get -qq -y update
RUN apt-get -qq -y install \
    debhelper devscripts bison flex \
    automake autoconf libtool git libreadline6-dev \
    zlib1g-dev libncurses5-dev libssl-dev libpam0g-dev \
    rake autotools-dev cgroup-tools build-essential \
    dh-make xz-utils
RUN apt-get -qq -y install libprotoc-dev libprotobuf-c-dev \
    protobuf-compiler python-protobuf protobuf-c-compiler \
    libnl-3-dev libnet1-dev libcap-dev pkg-config asciidoc xmlto \
    libbsd-dev systemtap-sdt-dev

ENV VERSION <%= @latest_dot %>
ENV VERSION_TILDE <%= @latest %>
ENV USER root
ENV SRC_PKG_NAME haconiwa_<%= @latest %>-1_amd64.deb
ENV DST_PKG_NAME haconiwa_<%= @latest %>-1+xenial_amd64.deb
VOLUME /pkg

COPY . /root/haconiwa-$VERSION_TILDE
WORKDIR /root/haconiwa-$VERSION_TILDE
RUN rm -fr mruby
RUN git clean -xdf
RUN git checkout -f .

RUN mkdir -p /libexec
RUN echo '#!/bin/bash'                                                          >  /libexec/builddeb.sh
RUN echo 'set -xe'                                                              >> /libexec/builddeb.sh
RUN echo 'cd /root/haconiwa-$VERSION_TILDE'                                     >> /libexec/builddeb.sh
RUN echo 'dh_make --single --createorig -y'                                     >> /libexec/builddeb.sh
RUN echo 'cp -v packages/deb/debian/* debian/'                                  >> /libexec/builddeb.sh
RUN echo 'rm -rf debian/*.ex debian/*.EX'                                       >> /libexec/builddeb.sh
RUN echo 'debuild -e HACONIWA_USE_CRIU=1 -e HACONIWA_USE_CRIU_STATIC=1 -uc -us' >> /libexec/builddeb.sh
RUN echo 'cd ../'                                                               >> /libexec/builddeb.sh
RUN echo 'cp $SRC_PKG_NAME /pkg/$DST_PKG_NAME'                                  >> /libexec/builddeb.sh
RUN chmod a+x /libexec/builddeb.sh

CMD ["/libexec/builddeb.sh"]
